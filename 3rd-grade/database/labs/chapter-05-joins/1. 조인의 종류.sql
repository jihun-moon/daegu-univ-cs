-- ==================================================
-- SQL JOIN 및 집계 예제 정리
-- 이 파일은 CROSS JOIN, INNER JOIN (이퀴 조인 및 비이퀴 조인), 
-- OUTER JOIN, SELF JOIN 등 다양한 조인 구문과
-- GROUP BY, COUNT, SUM 등의 집계 함수를 포함한 SQL 예제를 설명합니다.
-- 각 섹션별로 SQL 구문, 처리 목적, 그리고 예상 결과를 주석으로 포함하고 있습니다.
-- ==================================================

---------------------------------------------------------
-- [CROSS JOIN 예제]
-- 부서와 사원 테이블의 모든 조합을 생성한 후,
-- 이름이 '배재용'인 사원만 필터링합니다.
SELECT 부서.부서번호,
       부서명,
       이름,
       사원.부서번호
FROM 부서            -- NON-ANSI 구문: 원래 "FROM 부서, 사원" 형태로 사용 가능함.
CROSS JOIN 사원      -- NON-ANSI 구문: "CROSS JOIN 사원"를 제거하여도 같은 결과를 얻을 수 있음.
WHERE 이름 = '배재용';
 
/*
[예상 결과]
-----------------------------------------------------------
| 부서번호 | 부서명   | 이름    | 사원.부서번호              |
-----------------------------------------------------------
| 101      | 영업부   | 배재용  | 101                        |
| 102      | 기술부   | 배재용  | 102                        |
-----------------------------------------------------------
(예시: 부서와 사원을 CROSS JOIN 한 후, 이름이 '배재용'인 경우)
*/

---------------------------------------------------------
-- [이퀴 조인 (INNER JOIN) 예제 - ANSI 표준 구문]
-- 사원 테이블과 부서 테이블을 부서번호 기준으로 동등(이퀴) 조인하여,
-- 이름이 '이소미'인 사원의 사원번호, 직위, 부서번호, 부서명을 조회합니다.
SELECT 사원번호,
       직위,
       사원.부서번호,
       부서명
FROM 사원
INNER JOIN 부서
  ON 사원.부서번호 = 부서.부서번호  -- 이퀴 조인: 두 테이블의 부서번호 값이 동일한 행을 결합
WHERE 이름 = '이소미';
 
/*
[예상 결과]
----------------------------------------------------------
| 사원번호 | 직위      | 부서번호  | 부서명                 |
----------------------------------------------------------
| 2001    | 대리      | 101       | 영업부                 |
----------------------------------------------------------
(예시: 이름이 '이소미'인 사원의 정보와 해당 부서 정보)
*/

---------------------------------------------------------
-- [INNER JOIN 예제 - Non-ANSI 조인 구문 (이퀴 조인)]
/*
SELECT 사원번호,
       직위,
       사원.부서번호,
       부서명
FROM 사원, 부서
WHERE 사원.부서번호 = 부서.부서번호  -- 이퀴 조인: 두 테이블의 부서번호 값이 동일한 행을 결합
  AND 이름 = '이소미';
*/

---------------------------------------------------------
-- [집계 함수와 GROUP BY 예제: 주문 건수 (이퀴 조인 사용)]
-- 고객과 주문 테이블을 이퀴 조인 (INNER JOIN)하여, 
-- 각 고객별 주문 건수를 집계한 후 주문건수가 높은 순으로 정렬합니다.
SELECT 고객.고객번호, 
       담당자명, 
       고객회사명,
       COUNT(*) AS 주문건수
FROM 고객
INNER JOIN 주문
  ON 고객.고객번호 = 주문.고객번호  -- 이퀴 조인: 고객번호가 동일한 행을 결합
GROUP BY 고객.고객번호,
         담당자명,
         고객회사명
ORDER BY 주문건수 DESC;
 
/*
[예상 결과]
------------------------------------------------------------------
| 고객번호 | 담당자명 | 고객회사명 | 주문건수                    |
------------------------------------------------------------------
| C001     | 홍길동   | ABC Corp  | 25                         |
| C002     | 김철수   | XYZ Inc   | 18                         |
| ...                                                       |
------------------------------------------------------------------
(예시: 각 고객별 주문 건수를 내림차순 정렬)
*/

---------------------------------------------------------
-- [집계 함수와 다중 JOIN 예제: 주문 금액 합계 (모두 이퀴 조인)]
-- 고객, 주문, 주문세부 테이블을 각각 이퀴 조인 (INNER JOIN)하여,
-- 각 고객별로 (단가 * 주문수량)의 합계를 계산하여 주문금액합으로 출력합니다.
SELECT 고객.고객번호, 
       담당자명, 
       고객회사명,
       SUM(단가 * 주문수량) AS 주문금액합
FROM 고객 
INNER JOIN 주문
  ON 고객.고객번호 = 주문.고객번호  -- 이퀴 조인: 고객번호가 동일한 행을 결합
INNER JOIN 주문세부
  ON 주문.주문번호 = 주문세부.주문번호  -- 이퀴 조인: 주문번호가 동일한 행을 결합
GROUP BY 고객.고객번호,
         담당자명,
         고객회사명
ORDER BY 주문금액합 DESC;
 
/*
[예상 결과]
---------------------------------------------------------------------
| 고객번호 | 담당자명 | 고객회사명   | 주문금액합                  |
---------------------------------------------------------------------
| C005     | 이순신   | DEF Corp     | 500000                      |
| C001     | 홍길동   | ABC Corp     | 450000                      |
| ...                                                         |
---------------------------------------------------------------------
(예시: 주문금액합이 높은 순으로 정렬된 결과)
*/

---------------------------------------------------------
-- [비이퀴 조인 예제]
-- 고객과 마일리지등급 테이블을, 마일리지가 등급 범위에 해당하는 경우로
-- 조인한 후, 담당자명이 '이은광'인 고객 정보를 조회합니다.
SELECT 고객번호,
       고객회사명,
       담당자명,
       마일리지,
       등급.*
FROM 고객
INNER JOIN 마일리지등급 AS 등급
  ON 하한마일리지 <= 마일리지 AND 마일리지 <= 상한마일리지  -- 비이퀴 조인: 동등 비교가 아닌 범위 조건 사용
WHERE 담당자명 = '이은광';

/*
[예상 결과]
-------------------------------------------------------------------------------------
| 고객번호 | 고객회사명   | 담당자명 | 마일리지 | 등급번호 | 등급명  | 하한마일리지 | 상한마일리지 |
-------------------------------------------------------------------------------------
| C007     | LMN Corp     | 이은광   | 18000    | G2       | Silver  | 15000        | 20000        |
-------------------------------------------------------------------------------------
(예시: 담당자명이 '이은광'인 고객의 정보와 해당 마일리지 등급 정보)
*/

---------------------------------------------------------
-- [LEFT OUTER JOIN 예제]
-- 사원 테이블과 부서 테이블을 LEFT OUTER JOIN 하여,
-- 성별이 '여'인 사원의 정보와, 매칭되는 부서 정보를 조회합니다.
SELECT 사원번호,
       이름,
       성별,
       부서.부서명
FROM 사원
LEFT OUTER JOIN 부서
  ON 사원.부서번호 = 부서.부서번호
WHERE 성별 = '여';

/*
[예상 결과]
-------------------------------------------------------
| 사원번호 | 이름    | 성별 | 부서명      |
-------------------------------------------------------
| 3002     | 이영희  | 여   | 마케팅부    |
| 3003     | 김미영  | 여   | 영업부      |
-------------------------------------------------------
(예시: 성별이 '여'인 사원들의 정보, 부서에 매칭되지 않으면 부서명은 NULL)
*/

---------------------------------------------------------
-- [RIGHT OUTER JOIN 예제]
-- 사원 테이블과 부서 테이블을 RIGHT OUTER JOIN 하여,
-- 부서 정보를 기준으로 사원 정보를 조회합니다.
SELECT 부서명,
       사원.*
FROM 사원
RIGHT OUTER JOIN 부서
  ON 사원.부서번호 = 부서.부서번호;
/* 참고: 매칭되지 않는 경우 사원 정보는 NULL로 표시됨.
[예상 결과]
--------------------------------------------------------------------------------
| 부서명   | 사원번호 | 이름    | 성별 | 부서번호 | 기타 사원 관련 컬럼... |
--------------------------------------------------------------------------------
| 영업부   | 3001     | 홍길동  | 남   | 101      | ...                   |
| 기술부   | NULL     | NULL    | NULL | 102      | ...                   |
--------------------------------------------------------------------------------
(예시: 기술부에 배치된 사원이 없으면, 해당 부서의 사원 관련 필드는 NULL)
*/

---------------------------------------------------------
-- [LEFT OUTER JOIN 예제 - 부서에 소속되지 않은 사원 조회]
-- 사원 테이블을 LEFT OUTER JOIN 하여, 
-- 부서 정보가 없는(부서에 소속되지 않은) 사원의 정보를 조회합니다.
SELECT 이름,
       부서.*
FROM 사원
LEFT OUTER JOIN 부서
  ON 사원.부서번호 = 부서.부서번호
WHERE 부서.부서번호 IS NULL;

/*
[예상 결과]
-----------------------------------------------
| 이름    | 부서번호 | 부서명 | 기타 부서 관련 컬럼... |
-----------------------------------------------
| 김길동  | NULL     | NULL   | ...                    |
-----------------------------------------------
(예시: 부서에 소속되지 않은 사원들의 정보)
*/

---------------------------------------------------------
-- [SELF JOIN 예제: 상사 정보 조회]
-- 사원 테이블을 자기 자신과 조인하여, 각 사원의 상사 정보를 조회합니다.
SELECT 사원.사원번호,
       사원.이름,
       상사.사원번호 AS '상사의 사원번호',
       상사.이름 AS '상사의 이름'
FROM 사원
INNER JOIN 사원 AS 상사
  ON 사원.상사번호 = 상사.사원번호;

/*
[예상 결과]
------------------------------------------------------------
| 사원번호 | 이름    | 상사의 사원번호 | 상사의 이름     |
------------------------------------------------------------
| 3002     | 이영희  | 3001            | 홍길동          |
| 3003     | 김미영  | 3001            | 홍길동          |
------------------------------------------------------------
(예시: 각 사원의 상사 정보가 함께 조회됨)
*/

---------------------------------------------------------
-- [SELF JOIN 예제: 상사 정보 조회 (RIGHT OUTER JOIN)]
-- 상사 정보를 기준으로, 각 사원의 상사 정보를 오른쪽 외부 조인으로 조회합니다.
SELECT 사원.이름 AS '이름',
       사원.직위,
       상사.이름 AS '상사이름'
FROM 사원 AS 상사
RIGHT OUTER JOIN 사원 
  ON 사원.상사번호 = 상사.사원번호
ORDER BY 상사이름;

/*
[예상 결과]
--------------------------------------------------------
| 이름    | 직위    | 상사이름      |
--------------------------------------------------------
| 이영희  | 과장    | 홍길동        |
| 김미영  | 대리    | 홍길동        |
| 홍길동  | 부장    | NULL          |
--------------------------------------------------------
(예시: 상사이름을 기준으로 정렬된 결과. 상사 정보가 없는 경우 NULL 표시)
*/
