-- ==================================================
-- SQL 함수 및 예제 정리
-- 이 파일은 문자열 함수(CONCAT, CONCAT_WS, LENGTH 등)을 포함합니다.
-- 각 섹션별로 SQL 구문을 설명하는 주석이 포함되어 있습니다.
-- ==================================================

-- [자주 사용되는 SQL 패턴] 다양한 SQL 활용 사례
-- ==================================================

-- 1. 고객회사명이 '-----' 패턴과 일치하는 행 조회
SELECT * FROM 고객 WHERE REGEXP_LIKE(고객회사명, '-----');
-- 예상 결과: 고객회사명이 정확히 다섯 개의 하이픈(-----)으로 이루어진 행만 반환

-- 2. 도시가 '과천시' 또는 '오산시'인 고객 조회
SELECT * FROM 고객 WHERE REGEXP_LIKE(도시, '과천시|오산시');
-- 예상 결과: 도시가 과천시 또는 오산시인 고객 정보 반환

-- 3. 도시가 '[인천|부산|대전]광역시' 패턴에 일치하는 고객 조회
SELECT * FROM 고객 WHERE REGEXP_LIKE(도시, '[인천|부산|대전]광역시');
-- 예상 결과: 도시가 인천광역시, 부산광역시 또는 대전광역시인 고객 정보 반환

-- 4. 고객회사명이 '한'으로 시작하는 고객 조회
SELECT * FROM 고객 WHERE REGEXP_LIKE(고객회사명, '^한');
-- 예상 결과: 고객회사명이 '한'으로 시작하는 행 반환

-- 5. 고객회사명이 특정 패턴(^...푸.$)과 일치하는 고객 조회
SELECT * FROM 고객 WHERE REGEXP_LIKE(고객회사명, '^...푸.$');
-- 예상 결과: 예를 들어 'ABC푸D'처럼 전체 5글자이며, 4번째 글자가 '푸'인 고객회사명 반환

-- 6. 담당자명이 '정' 문자가 1회 이상 반복되는 패턴과 일치하는 고객 조회
SELECT * FROM 고객 WHERE REGEXP_LIKE(담당자명, '정+');
-- 예상 결과: '정', '정정', '정정정' 등 '정' 문자가 연속해서 나타나는 담당자명을 가진 행 반환
-- 참고: '정*'은 0회 이상이므로 빈 문자열에도 매치되므로 사용에 주의

-- 7. 고객번호가 P에서 S까지의 문자로 끝나는 고객 조회
SELECT * FROM 고객 WHERE REGEXP_LIKE(고객번호, '[P-S]$');
-- 예상 결과: 고객번호가 P, Q, R, 또는 S로 끝나는 행 반환
-- 주의: 만약 '[^P-S]$'를 사용하면 P~S가 아닌 문자로 끝나는 행을 의미

-- 8. 고객회사명이 정확히 5글자인 경우 조회
SELECT * FROM 고객 WHERE REGEXP_LIKE(고객회사명, '^.{5}$');
-- 예상 결과: 고객회사명이 5글자인 행 반환

-- 9. 고객번호에 'T' 또는 'S'가 2회 연속 나타나는 경우
SELECT * FROM 고객 WHERE REGEXP_LIKE(고객번호, '[TS]{2}');
-- 예상 결과: 고객번호 내에 TS, TT, SS, 또는 ST와 같이 'T'나 'S'가 연속해서 나타나는 행 반환

-- 10. 고객번호에 'T' 또는 'S'가 1회 또는 2회 나타나는 경우
SELECT * FROM 고객 WHERE REGEXP_LIKE(고객번호, '[TS]{1,2}');
-- 예상 결과: 고객번호 내에 'T' 또는 'S'가 1~2회 나타나는 행 반환

-- 11. 전화번호에 '45' 문자열이 포함된 경우 조회
SELECT * FROM 고객 WHERE 전화번호 LIKE '%45';
-- 예상 결과: 전화번호에 '45'가 포함된 고객 정보 반환


-- [CH2 예제문제] SQL 기본 개념을 다루는 예제 문제
-- ==================================================

-- 1. 도시가 '서울특별시'이면서 마일리지가 15000과 20000 사이인 고객 조회
SELECT * 
FROM 고객 
WHERE 도시 LIKE '서울특별시'
  AND 마일리지 BETWEEN 15000 AND 20000;
-- 예상 결과: 서울특별시에 있으며 마일리지가 15000 ~ 20000 사이인 고객 반환

-- 2. 고객 테이블에서 중복되지 않은 지역과 도시 조합을 정렬하여 조회
SELECT DISTINCT 지역, 도시 
FROM 고객
ORDER BY 1, 2;
-- 예상 결과: 중복 제거된 지역, 도시 조합을 오름차순 정렬하여 반환

-- 3. 도시가 '춘천시', '과천시', '광명시' 중 하나이며, 담당자직위에 '이사' 또는 '사원'이 포함된 고객 조회
SELECT *
FROM 고객
WHERE 도시 IN ('춘천시', '과천시', '광명시')
  AND (담당자직위 LIKE '%이사%' OR 담당자직위 LIKE '%사원%');
-- 예상 결과: 도시가 해당 목록에 속하고, 담당자직위에 '이사'나 '사원'이 포함된 고객 정보 반환

-- 4. 도시명이 '광역시' 또는 '특별시'로 끝나지 않는 고객 중 마일리지가 높은 상위 3명 조회
SELECT *
FROM 고객
WHERE NOT (도시 LIKE '%광역시' OR 도시 LIKE '%특별시')
ORDER BY 마일리지 DESC
LIMIT 3;
-- 예상 결과: 도시명이 '광역시'나 '특별시'로 끝나지 않으며, 마일리지가 높은 고객 상위 3명 반환

-- 5. 지역 값이 존재하며(즉, NULL이 아닌) 담당자직위가 '대표 이사'가 아닌 고객 조회
SELECT *
FROM 고객 
WHERE 지역 IS NOT NULL
  AND 담당자직위 <> '대표 이사';
-- 예상 결과: 지역이 NULL이 아니고 담당자직위가 '대표 이사'가 아닌 고객 정보 반환
