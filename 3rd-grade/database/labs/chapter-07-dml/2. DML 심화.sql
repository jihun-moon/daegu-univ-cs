-- ==================================================
-- DML 및 DDL 종합 예제 정리
-- 이 파일에는 테이블 생성부터 INSERT, UPDATE, DELETE까지
-- 다양한 SQL 구문을 실제 시나리오별로 정리한 예제가 포함되어 있습니다.
-- 각 섹션마다 목적과 핵심 포인트를 주석으로 설명합니다.
-- ==================================================

---------------------------------------------------------
-- 1) 테이블 생성 (DDL)
-- 목적: 고객별 주문 요약을 저장할 새 테이블 생성
CREATE TABLE 고객주문요약
(
    고객번호       CHAR(5)      PRIMARY KEY,
    고객회사명     VARCHAR(50),
    주문건수       INT,
    최종주문일     DATE
);

---------------------------------------------------------
-- 2) INSERT INTO ... SELECT
-- 목적: 고객과 주문 테이블을 조인해 고객별 주문건수와 최종주문일을
--       계산한 다음, 요약 테이블에 일괄 삽입
INSERT INTO 고객주문요약
    SELECT
        고객.고객번호,
        고객회사명,
        COUNT(*) AS 주문건수,
        MAX(주문일) AS 최종주문일
    FROM 고객, 주문
    WHERE 고객.고객번호 = 주문.고객번호
    GROUP BY 고객.고객번호, 고객회사명;
SELECT * FROM 고객주문요약;

---------------------------------------------------------
-- 3) UPDATE ... SET = (서브쿼리)
-- 목적: 제품명에 ‘소스’가 포함된 제품들의 평균 단가를 계산해
--       특정 제품(91번)의 단가로 설정
UPDATE 제품
SET 단가 = (
    SELECT *
    FROM (
        SELECT AVG(단가)
        FROM 제품
        WHERE 제품명 LIKE '%소스%'
    ) AS t
)
WHERE 제품번호 = 91;
SELECT * FROM 제품;

---------------------------------------------------------
-- 4) UPDATE ... WHERE IN (서브쿼리)
-- 목적: 주문 기록이 있는 고객들만 골라 마일리지를 10% 인상
UPDATE 고객,
     (
       SELECT DISTINCT 고객번호
       FROM 주문
     ) AS 주문고객
SET 마일리지 = 마일리지 * 1.1
WHERE 고객.고객번호 IN (주문고객.고객번호);
SELECT * FROM 고객
WHERE 고객번호 IN (SELECT DISTINCT 고객번호 FROM 주문);

---------------------------------------------------------
-- 5) UPDATE ... JOIN
-- 목적: ‘S’ 등급 고객의 마일리지를 등급 테이블과 조인해
--       1,000 포인트 추가
UPDATE 고객
INNER JOIN 마일리지등급
  ON 마일리지 BETWEEN 하한마일리지 AND 상한마일리지
SET 마일리지 = 마일리지 + 1000
WHERE 등급명 = 'S';

SELECT 고객번호,
       고객회사명,
       마일리지
FROM 고객
INNER JOIN 마일리지등급
  ON 마일리지 BETWEEN 하한마일리지 AND 상한마일리지
WHERE 등급명 = 'S';

---------------------------------------------------------
-- 6) DELETE ... WHERE NOT IN (서브쿼리)
-- 목적: 주문세부에 없는 주문(미판매 주문)을 모두 삭제
DELETE FROM 주문
WHERE 주문번호 NOT IN (
    SELECT DISTINCT 주문번호
    FROM 주문세부
);

---------------------------------------------------------
-- 7) DELETE JOIN (다중 테이블 삭제)
-- 목적: 특정 주문번호(H0248)에 해당하는 주문과 주문세부를
--       동시에 삭제
SELECT * FROM 주문 WHERE 주문번호 = 'H0248';
SELECT * FROM 주문세부 WHERE 주문번호 = 'H0248';

DELETE 주문,
       주문세부
FROM 주문
INNER JOIN 주문세부
  ON 주문.주문번호 = 주문세부.주문번호
WHERE 주문.주문번호 = 'H0248';

---------------------------------------------------------
-- 8) LEFT OUTER JOIN 후 DELETE
-- 목적: 주문 기록이 전혀 없는 고객(휴면 고객)을 조회하고,
--       바로 삭제
SELECT 고객.*
FROM 고객
LEFT OUTER JOIN 주문
  ON 고객.고객번호 = 주문.고객번호
WHERE 주문.고객번호 IS NULL;

DELETE 고객
FROM 고객
LEFT OUTER JOIN 주문
  ON 고객.고객번호 = 주문.고객번호
WHERE 주문.고객번호 IS NULL;

---------------------------------------------------------
-- 9) 특정 고객번호 직접 조회
-- 목적: 삭제 후 남은(또는 확인하고 싶은) 고객을 지정해 조회
SELECT *
FROM 고객
WHERE 고객번호 IN ('BQQZA', 'RISPA', 'SSAFI', 'TTRAN');
